[package]
name = "deno_task_shell"
version = "0.23.0"
authors = ["the Deno authors"]
documentation = "https://docs.rs/deno_task_shell"
edition = "2024"
homepage = "https://deno.land/"
license = "MIT"
repository = "https://github.com/denoland/deno_task_shell"
description = "Cross platform scripting for deno task"

[features]
default = ["shell"]
shell = ["futures", "glob", "nix", "os_pipe", "path-dedot", "tokio", "windows-sys", "sys_traits/real", "sys_traits/winapi", "sys_traits/libc"]
serialization = ["serde"]

[dependencies]
anyhow = "1.0.75"
futures = { version = "0.3.29", optional = true }
glob = { version = "0.3.1", optional = true }
path-dedot = { version = "3.1.1", optional = true }
os_pipe = { version = "1.1.4", optional = true }
serde = { version = "1", features = ["derive"], optional = true }
monch = "0.5.0"
thiserror = "2.0.9"
tokio = { version = "1", features = ["fs", "io-std", "io-util", "macros", "process", "rt-multi-thread", "sync", "time"], optional = true }
deno_path_util = "0.3.2"
sys_traits = "0.1.9"

[target.'cfg(unix)'.dependencies]
nix = { version = "0.29.0", features = ["signal"], optional = true }

[target.'cfg(windows)'.dependencies]
windows-sys = { version = "0.59.0", features = ["Win32_Security", "Win32_System_JobObjects", "Win32_System_Threading"], optional = true }

[dev-dependencies]
deno_unsync = "0.4.1"
parking_lot = "0.12.1"
pretty_assertions = "1"
serde_json = "1.0.111"
tempfile = "3.8.1"
